---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import ProductCard from '../components/ProductCard.astro';
import PageTransition from '../components/PageTransition.astro';
import { productos } from '../data/productos';

// Obtener la categoría de la URL si existe
const categoria = Astro.url.searchParams.get('categoria');
const productosFiltrados = categoria && categoria !== 'todos' 
  ? productos.filter(p => p.categoria.id === categoria)
  : productos;

const titulo = categoria && categoria !== 'todos'
  ? productos.find(p => p.categoria.id === categoria)?.categoria.nombre || 'Todos los productos'
  : 'Todos los productos';
---

<Layout title="CarpiShop - Tu tienda de ropa online">
  <!-- Loader -->
  <div id="loader" class="fixed inset-0 bg-gradient-to-br from-primary-600 to-primary-700 z-50 flex items-center justify-center">
    <div class="text-center">
      <div class="relative">
        <!-- Logo animado -->
        <h1 class="text-white-custom text-4xl font-bold mb-8 animate-pulse">CarpiShop</h1>
        
        <!-- Spinner -->
        <div class="w-16 h-16 border-4 border-white-custom border-t-transparent rounded-full animate-spin mx-auto mb-4"></div>
        
        <!-- Texto de carga -->
        <p class="text-white-custom text-lg animate-pulse">Bienvenido a CarpiShop</p>
        
        <!-- Puntos animados -->
        <div class="flex justify-center mt-4 space-x-1">
          <div class="w-2 h-2 bg-white-custom rounded-full animate-bounce"></div>
          <div class="w-2 h-2 bg-white-custom rounded-full animate-bounce" style="animation-delay: 0.1s"></div>
          <div class="w-2 h-2 bg-white-custom rounded-full animate-bounce" style="animation-delay: 0.2s"></div>
        </div>
      </div>
    </div>
  </div>

  <!-- Contenido principal -->
  <div id="contenido-principal" class="grid grid-cols-1 lg:grid-cols-5 bg-gradient-to-br from-primary-600 to-primary-700 min-h-screen hidden">
    <Navigation currentPage="productos" />
    <main class="bg-white-custom m-4 lg:m-8 lg:ml-0 rounded-2xl p-8 lg:p-12 col-span-1 lg:col-span-4">
      <PageTransition>
        <h2 class="text-primary-700 text-3xl font-semibold mb-8" id="titulo-principal">{titulo}</h2>
        <div id="contenedor-productos" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4">
          {productosFiltrados.map(producto => (
            <div class="product-card">
              <ProductCard producto={producto} />
            </div>
          ))}
        </div>
      </PageTransition>
    </main>
  </div>

  <style>
    /* Estilos para el toast clickeable */
    .Toastify__toast {
      transition: all 0.3s ease !important;
    }
    
    .Toastify__toast:hover {
      transform: scale(1.05) !important;
      box-shadow: 0 8px 25px rgba(75, 51, 168, 0.3) !important;
    }

    /* Estilos para el loader */
    @keyframes fadeInUp {
      from {
        opacity: 0;
        transform: translateY(20px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    #loader {
      animation: fadeInUp 0.5s ease;
    }

    #loader h1 {
      background: linear-gradient(45deg, #ffffff, #e0e0e0);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
  </style>

  <script>
    // Funcionalidad del carrito y filtros
    import { productos } from '../data/productos';

    let productosEnCarrito = JSON.parse(localStorage.getItem("cart") || "[]");
    
    const loader = document.querySelector("#loader");
    const contenidoPrincipal = document.querySelector("#contenido-principal");
    const contenedorProductos = document.querySelector("#contenedor-productos");
    const botonesCategorias = document.querySelectorAll(".boton-categoria");
    const tituloPrincipal = document.querySelector("#titulo-principal");
    const numerito = document.querySelector("#numerito");

    // Función para ocultar el loader
    function ocultarLoader() {
      if (loader && contenidoPrincipal) {
        loader.style.opacity = "0";
        loader.style.transition = "opacity 0.5s ease";
        
        setTimeout(() => {
          loader.style.display = "none";
          contenidoPrincipal.classList.remove("hidden");
          contenidoPrincipal.style.opacity = "0";
          contenidoPrincipal.style.transition = "opacity 0.5s ease";
          
          setTimeout(() => {
            contenidoPrincipal.style.opacity = "1";
          }, 100);
        }, 500);
      }
    }

    // Función para verificar si las imágenes están cargadas
    function verificarCargaImagenes() {
      const imagenes = document.querySelectorAll('img');
      let imagenesCargadas = 0;
      const totalImagenes = imagenes.length;
      
      if (totalImagenes === 0) {
        ocultarLoader();
        return;
      }
      
      imagenes.forEach(img => {
        if (img.complete) {
          imagenesCargadas++;
        } else {
          img.addEventListener('load', () => {
            imagenesCargadas++;
            if (imagenesCargadas === totalImagenes) {
              ocultarLoader();
            }
          });
          
          img.addEventListener('error', () => {
            imagenesCargadas++;
            if (imagenesCargadas === totalImagenes) {
              ocultarLoader();
            }
          });
        }
      });
      
      // Si todas las imágenes ya están cargadas
      if (imagenesCargadas === totalImagenes) {
        ocultarLoader();
      }
    }

    // Actualizar numerito del carrito
    function actualizarNumerito() {
      let nuevoNumerito = productosEnCarrito.reduce((acc, producto) => acc + producto.quantity, 0);
      if (numerito) numerito.innerText = nuevoNumerito;
    }

    // Cargar productos por categoría
    function cargarProductos(productosElegidos) {
      if (!contenedorProductos) return;
      
      contenedorProductos.innerHTML = "";
      
      productosElegidos.forEach(producto => {
        const div = document.createElement("div");
        div.classList.add("relative", "group");
        div.innerHTML = `
          <a href="/productos/${producto.id}" class="block">
            <img class="w-full rounded-xl transition-transform duration-300 group-hover:scale-105 cursor-pointer" src="${producto.imagen}" alt="${producto.titulo}">
          </a>
          <div class="bg-gradient-to-r from-primary-600 to-primary-700 text-white-custom p-3 rounded-xl -mt-8 relative z-10 flex flex-col gap-2 shadow-lg">
            <h3 class="text-base font-medium">${producto.titulo}</h3>
            <p class="text-sm font-semibold">$${producto.precio}</p>
            <button 
              class="border-2 border-white-custom bg-white-custom text-primary-600 py-1 px-3 uppercase rounded-2xl cursor-pointer font-semibold text-sm transition-all duration-200 hover:bg-primary-600 hover:text-white-custom hover:scale-105" 
              data-producto-id="${producto.id}"
            >
              Agregar
            </button>
          </div>
        `;
        contenedorProductos.append(div);
      });
      
      actualizarBotonesAgregar();
    }

    // Agregar al carrito
    function agregarAlCarrito(e) {
      console.log('Botón agregar clickeado');
      const idBoton = e.currentTarget.getAttribute('data-producto-id');
      console.log('ID del producto:', idBoton);
      const productoAgregado = productos.find(producto => producto.id === idBoton);
      console.log('Producto encontrado:', productoAgregado);

      if (productoAgregado) {
        Toastify({
          text: "🛒 Producto agregado - Click para ver carrito",
          duration: 4000,
          close: true,
          gravity: "bottom",
          position: "right",
          stopOnFocus: true,
          style: {
            background: "linear-gradient(to right, #4b33a8, #785ce9)",
            borderRadius: "2rem",
            textTransform: "uppercase",
            fontSize: ".75rem",
            cursor: "pointer",
            transition: "all 0.3s ease"
          },
          offset: {
            x: '1.5rem',
            y: '1.5rem'
          },
          onClick: function() {
            window.location.href = '/carrito';
          }
        }).showToast();

        if (productosEnCarrito.some(producto => producto.id === idBoton)) {
          const index = productosEnCarrito.findIndex(producto => producto.id === idBoton);
          productosEnCarrito[index].quantity++;
        } else {
          productosEnCarrito.push({
            id: productoAgregado.id,
            title: productoAgregado.titulo,
            price: productoAgregado.precio,
            image: productoAgregado.imagen,
            quantity: 1
          });
        }

        actualizarNumerito();
        localStorage.setItem("cart", JSON.stringify(productosEnCarrito));
        window.dispatchEvent(new Event('cart-updated'));
        
        // Mostrar toast con animación del numerito
        setTimeout(() => {
          const numeritoElement = document.querySelector("#numerito");
          if (numeritoElement) {
            numeritoElement.style.transform = "scale(1.3)";
            numeritoElement.style.transition = "transform 0.3s ease";
            setTimeout(() => {
              numeritoElement.style.transform = "scale(1)";
            }, 300);
          }
        }, 100);
      }
    }

    // Actualizar botones agregar
    function actualizarBotonesAgregar() {
      const botonesAgregar = document.querySelectorAll("[data-producto-id]");
      botonesAgregar.forEach(boton => {
        boton.addEventListener("click", agregarAlCarrito);
      });
    }

    // Event listeners para categorías
    botonesCategorias.forEach(boton => {
      boton.addEventListener("click", (e) => {
        console.log('Botón de categoría clickeado:', e.currentTarget.id);
        
        // Remover estilos activos de todos los botones
        botonesCategorias.forEach(b => {
          b.classList.remove("active", "bg-white-custom", "text-primary-600");
          b.classList.add("text-white-custom");
        });
        
        // Agregar estilos activos al botón clickeado
        e.currentTarget.classList.add("active", "bg-white-custom", "text-primary-600");
        e.currentTarget.classList.remove("text-white-custom");

        const categoriaId = e.currentTarget.id;
        if (categoriaId !== "todos") {
          const productoCategoria = productos.find(producto => producto.categoria.id === categoriaId);
          if (tituloPrincipal && productoCategoria) {
            tituloPrincipal.innerText = productoCategoria.categoria.nombre;
          }
          const productosBoton = productos.filter(producto => producto.categoria.id === categoriaId);
          cargarProductos(productosBoton);
        } else {
          if (tituloPrincipal) tituloPrincipal.innerText = "Todos los productos";
          cargarProductos(productos);
        }
      });
    });

    // Inicializar
    console.log('Inicializando página principal...');
    console.log('Productos cargados:', productos.length);
    console.log('Botones de categorías encontrados:', botonesCategorias.length);
    
    // Inicializar con verificación de carga de imágenes
    setTimeout(() => {
      actualizarNumerito();
      actualizarBotonesAgregar();
      verificarCargaImagenes();
      console.log('Página inicializada correctamente');
    }, 800); // Mínimo 0.8 segundos de loader
  </script>
</Layout> 